{"title":"数据结构中数组与编程语言中数组的关系","date":"2019-05-23T07:24:45.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1558606526839&di=f16be141e061e0cca3d587ec3b031b7b&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20171225%2F110c67b690be4dd6a32cec75f0f0b42b.jpeg","slug":"array-differ","tags":["摘录","数据结构与算法","数组"],"updated":"2019-05-23T09:50:53.993Z","content":"<p>数据结构与算法中的“数组”与编程语言中的“数组”，它们并不完全等同。编程语言在实现自己的“数组”类型的时候，并不是完全遵循数据结构“数组”的定义，而是针对编程语言自身的特点，做了调整。</p>\n<a id=\"more\"></a>\n<p>数据结构与算法中的数组概念是这样定义的：数组是存储相同数据类型的一块连续的存储空间。也就是，数组中的数据必须是相同类型的，数组中的数据必须是连续存储的。只有这样，数组才能实现根据下标快速地（时间复杂度是 O(1)）定位一个元素。</p>\n<p>在不同的编程语言中，数组这种数据类型的实现方式都不大相同，比如下面的 C/C++、Java、Javascript</p>\n<h2 id=\"C-C-中数组的实现方式\">C/C++ 中数组的实现方式<a href=\"post/array-differ#C-C-中数组的实现方式\"></a></h2><p><strong>C/C++ 中的数组，是非常标准的数据结构中的数组，也就是连续存储相同类型的数据的一块内存空间</strong>。</p>\n<p>在 C/C++ 中，不管是基本类型数据，比如 int、long、char，还是结构体、对象，在数组中都是连续存储的。</p>\n<ul>\n<li>基本数据类型数组</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> arr[<span class=\"number\">3</span>];</span><br><span class=\"line\">arr[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">arr[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">arr[<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n<div class=\"article-img\"><p><img src=\"https://github.com/huabinzhang427/hexo-blog-source/blob/master/images/array-c1.png?raw=true\" alt=\"c/c++-基本数据类型数组\" data-zoomable></p></div>\n<p>数组 arr 中存储的是 int 基本类型的数据，对应的内存存储方式。从图中可以看出，数据是存储在一片连续的内存空间中。</p>\n<ul>\n<li>结构体（class 对象）数组</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Dog</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> a;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Dog</span> <span class=\"title\">arr</span>[3];</span></span><br><span class=\"line\"></span><br><span class=\"line\">arr[<span class=\"number\">0</span>].a = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">arr[<span class=\"number\">0</span>].b = <span class=\"string\">'1'</span>;</span><br><span class=\"line\">arr[<span class=\"number\">1</span>].a = <span class=\"string\">'2'</span>;</span><br><span class=\"line\">arr[<span class=\"number\">1</span>].b = <span class=\"string\">'3'</span>;</span><br><span class=\"line\">arr[<span class=\"number\">2</span>].a = <span class=\"string\">'4'</span>;</span><br><span class=\"line\">arr[<span class=\"number\">2</span>].b = <span class=\"string\">'5'</span>;</span><br></pre></td></tr></table></figure>\n<div class=\"article-img\"><p><img src=\"https://github.com/huabinzhang427/hexo-blog-source/blob/master/images/array-c2.png?raw=true\" alt=\"c/c++-结构体（class 对象）数组\" data-zoomable></p></div>\n<p>结构体数组中的元素，也是存储在一片连续的内存空间中。</p>\n<ul>\n<li>二维数组（或多维数组）</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Dog</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> a;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Dog</span> <span class=\"title\">arr</span>[3][2];</span></span><br></pre></td></tr></table></figure>\n<div class=\"article-img\"><p><img src=\"https://github.com/huabinzhang427/hexo-blog-source/blob/master/images/array-c3.png?raw=true\" alt=\"c/c++-二维数组（或多维数组）\" data-zoomable></p></div>\n<p>和数据结构中二维数组是一样的，<strong>数据先按行后按列，并且是连续存储的</strong>。</p>\n<p><strong>C/C++ 中数组的数据存储方式，完全符合数据结构和算法中数组的定义</strong>。</p>\n<h2 id=\"Java-中数组的实现方式\">Java 中数组的实现方式<a href=\"post/array-differ#Java-中数组的实现方式\"></a></h2><ul>\n<li>基本数据类型数组</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> arr[] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">arr[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">arr[<span class=\"number\">1</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">arr[<span class=\"number\">2</span>] = <span class=\"number\">3</span>;</span><br></pre></td></tr></table></figure>\n<div class=\"article-img\"><p><img src=\"https://github.com/huabinzhang427/hexo-blog-source/blob/master/images/array-java1.png?raw=true\" alt=\"java-基本数据类型数组\" data-zoomable></p></div>\n<p>注意，new 申请的空间在堆上，arr 存储在栈上。arr 存储的是数组空间的首地址。</p>\n<p>在 java 中，基本数据类型数组还是符合数据结构中数组的定义的。数组中数据是相同类型的、并且存储在一片连续的内存空间中。</p>\n<ul>\n<li>class 对象数组</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person arr[] = <span class=\"keyword\">new</span> Person[<span class=\"number\">3</span>];</span><br><span class=\"line\">arr[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> Person(<span class=\"string\">'0'</span>);</span><br><span class=\"line\">arr[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> Person(<span class=\"string\">'1'</span>);</span><br><span class=\"line\">arr[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> Person(<span class=\"string\">'2'</span>);</span><br></pre></td></tr></table></figure>\n<div class=\"article-img\"><p><img src=\"https://github.com/huabinzhang427/hexo-blog-source/blob/master/images/array-java2.png?raw=true\" alt=\"java-class 对象数组\" data-zoomable></p></div>\n<p>在 Java 中，对象数组存储的是对象在内存中的地址，而非对象本身。对象本身在内存中并不是连续存储的，而是散落在各个地方。</p>\n<ul>\n<li>二维数组（或多维数组）</li>\n</ul>\n<p>二维数组（或多维数组）存储基本数据类型</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> arr[][] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>][];</span><br><span class=\"line\">arr[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">arr[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">arr[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br></pre></td></tr></table></figure>\n<div class=\"article-img\"><p><img src=\"https://github.com/huabinzhang427/hexo-blog-source/blob/master/images/array-java3.png?raw=true\" alt=\"java-二维数组（或多维数组）存储基本数据类型\" data-zoomable></p></div>\n<p><strong>在 java 中，二维数组中的第二维，可以是不同长度的</strong>。</p>\n<p>二维数组（或多维数组）存储对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Person arr[] = <span class=\"keyword\">new</span> Person[<span class=\"number\">3</span>][];</span><br><span class=\"line\">arr[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> Person[<span class=\"number\">1</span>];</span><br><span class=\"line\">arr[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> Person[<span class=\"number\">2</span>];</span><br><span class=\"line\">arr[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> Person[<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> Person(<span class=\"string\">'0'</span>);</span><br><span class=\"line\">arr[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> Person(<span class=\"string\">'1'</span>);</span><br></pre></td></tr></table></figure>\n<div class=\"article-img\"><p><img src=\"https://github.com/huabinzhang427/hexo-blog-source/blob/master/images/array-java4.png?raw=true\" alt=\"java-二维数组（或多维数组）存储对象\" data-zoomable></p></div>\n<p><strong>在 Java 编程语言中，数组这种数据类型，除了存储基本类型的一维数组之外，对象数组、二维数组都和数据结构中数组的定义有很大的区别</strong>。</p>\n<h2 id=\"Javascript-中数组的实现方式\">Javascript 中数组的实现方式<a href=\"post/array-differ#Javascript-中数组的实现方式\"></a></h2><p><strong>JavaScript 中的数组，可以存储不同类型的数据，数组中的数据也不一定是连续存储的（按照下标随机访问的效率不高），并且还能支持变长数组</strong>。</p>\n<p><strong>实际上，Javascript 中的数组，会根据我们存储数据的不同，选择不同的实现方式</strong>。如果数组中存储的是相同类型的数据，那 JavaScript 就用数据结构中数组来实现，也就是说，会分配一块连续的内存空间来存储数据。如果数组中存储的是非相同类型的数据，那 JavaScript 就用类似于<strong>散列表</strong>的结构来存储数据。也就是说，数据并不是连续存储在内存中的。这也是 JavaScript 数组支持存储不同类型数据的原因。</p>\n<p>如果我们从一个存储了相同类型数据的数组中，插入一个不同类型的数据，那 JavaScript 会将底层的数据结构，从数组变成散列表。</p>\n<p>JavaScript 为了照顾一些底层应用的开发者，提供了另一种数据类型 <code>ArrayBuffer</code>，它符合标准的数据结构中数组的定义，它分配一片连续的内存空间，仅仅用来存储相同类型的数据。</p>\n<h2 id=\"内容总结\">内容总结<a href=\"post/array-differ#内容总结\"></a></h2><p>数据结构和算法先于编程语言出现，编程语言中的一些数据类型，并不能跟数据结构和算法中数组的定义一一对应，它们往往会根据自身语言的特点，在实现上做一些调整。</p>\n<div class=\"article-img\"><p><img src=\"https://github.com/huabinzhang427/hexo-blog-source/blob/master/images/array-differ.png?raw=true\" alt=\"c/c++-基本数据类型数组\" data-zoomable></p></div>\n","next":{"title":"数组-最基础的数据结构","slug":"array-analysis"},"link":"http://yoursite.com/post/array-differ/","toc":[{"title":"C/C++ 中数组的实现方式","id":"C-C-中数组的实现方式","index":"1"},{"title":"Java 中数组的实现方式","id":"Java-中数组的实现方式","index":"2"},{"title":"Javascript 中数组的实现方式","id":"Javascript-中数组的实现方式","index":"3"},{"title":"内容总结","id":"内容总结","index":"4"}],"reward":false}