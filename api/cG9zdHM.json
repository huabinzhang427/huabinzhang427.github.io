{"per_page":10,"total":1,"current":1,"data":[{"title":"数据结构中数组与编程语言中数组的关系","date":"2019-05-23T07:24:45.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1558606526839&di=f16be141e061e0cca3d587ec3b031b7b&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20171225%2F110c67b690be4dd6a32cec75f0f0b42b.jpeg","excerpt":"<p>数据结构与算法中的“数组”与编程语言中的“数组”，它们并不完全等同。编程语言在实现自己的“数组”类型的时候，并不是完全遵循数据结构“数组”的定义，而是针对编程语言自身的特点，做了调整。</p>","slug":"array-differ","tags":["摘录","数据结构与算法","数组"]},{"title":"数组-最基础的数据结构","date":"2019-05-13T01:09:47.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1557720850746&di=b53ef16dc1fa22e863aadc792d38421a&imgtype=0&src=http%3A%2F%2Fupload-images.jianshu.io%2Fupload_images%2F1737506-3d4446d6942ce15b.png","excerpt":"<p>数组（Array）是一种线性表数据结构，它用一组连续的内存空间，来存储一组具有相同类型的数据。</p>","slug":"array-analysis","tags":["摘录","数据结构与算法","数组"]},{"title":"编程语言的进化","date":"2019-05-09T12:18:10.000Z","thumbnail":"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=300013094,1242527393&fm=26&gp=0.jpg","excerpt":"<p>从编程范式演进的角度来谈编程语言的进化。包括过程式、函数式、面向对象、面向连接。</p>","slug":"programe-language-evolution","tags":["摘录","架构设计"]},{"title":"分析冯·诺依曼体系结构","date":"2019-05-08T01:40:48.000Z","thumbnail":"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=3246068745,2224323950&fm=26&gp=0.jpg","excerpt":"<p>冯·诺依曼体系结构的不凡之处在于，它想“解决一切可以用‘计算’来解决的问题”。</p>","slug":"framework-von-neumann","tags":["摘录","架构设计"]},{"title":"最好/最坏/平均/均摊时间复杂度分析","date":"2019-05-06T07:13:59.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1557137461886&di=b574f630138d03e1f44f7678e5c772b5&imgtype=0&src=http%3A%2F%2Fimg0.ph.126.net%2FPfemb7OMGFBvWFb0etStCw%3D%3D%2F6598241846053667397.jpg","excerpt":"<p>同一段代码，在不同输入的情况下，复杂度量级可能是不一样的。</p>","slug":"complexity-analysis2","tags":["复杂度分析","摘录","数据结构与算法"]},{"title":"基础复杂度分析","date":"2019-05-06T02:51:41.000Z","thumbnail":"https://github.com/huabinzhang427/hexo-blog-source/blob/master/images/complexity-base-annalysis1.jpg?raw=true","excerpt":"<p>数据结构和算法本身解决的是“快”和“省”的问题，即如何让代码运行的更快，如何让代码更省存储空间。</p>","slug":"complexity-analysis","tags":["复杂度分析","摘录","数据结构与算法"]},{"title":"架构设计的宏观视角","date":"2019-05-05T03:22:58.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1557058401222&di=46de0116dc64fdfd2ce0b0b70c9bf7d7&imgtype=0&src=http%3A%2F%2Fimg.mp.itc.cn%2Fq_mini%2Cc_zoom%2Cw_640%2Fupload%2F20170329%2Fe24c0b68fb374b7786488970a80deace_th.jpeg","excerpt":"<p>现在包罗万象的信息世界，正是在最底层的冯·诺依曼的基础体系上搭建而成，我们熟知的架构，则是最上层的业务架构。</p>","slug":"framework-macro","tags":["摘录","架构设计"]}]}